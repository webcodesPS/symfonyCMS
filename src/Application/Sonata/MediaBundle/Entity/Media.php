<?php

namespace App\Application\Sonata\MediaBundle\Entity;

use App\Entity\ContentMedia;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Sonata\MediaBundle\Entity\BaseMedia as BaseMedia;

/**
 * This file has been generated by the SonataEasyExtendsBundle.
 *
 * @link https://sonata-project.org/easy-extends
 *
 * References:
 * @link http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 */
class Media extends BaseMedia
{
    /**
     * @var int $id
     */
    protected $id;

    /**
     * @var \App\Entity\ContentMedia
     */
    private $contents;

    private $publicUrl;

    public function __construct()
    {
        $this->contents = new ArrayCollection();
    }

    /**
     * Get id.
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set content
     *
     * @param array $contents
     * @return Contents
     */
    public function setContent($contents)
    {
        $this->contents = $contents;

        return $this;
    }

    /**
     * Get contents
     *
     * @return string
     */
    public function getContent()
    {
        return $this->contents;
    }

    /**
     * @return Collection|ContentMedia[]
     */
    public function getContents(): Collection
    {
        return $this->contents;
    }

    public function addContent(ContentMedia $content): self
    {
        if (!$this->contents->contains($content)) {
            $this->contents[] = $content;
            $content->setMedia($this);
        }

        return $this;
    }

    public function removeContent(ContentMedia $content): self
    {
        if ($this->contents->contains($content)) {
            $this->contents->removeElement($content);
            // set the owning side to null (unless already changed)
            if ($content->getMedia() === $this) {
                $content->setMedia(null);
            }
        }

        return $this;
    }
}
